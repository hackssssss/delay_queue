// Code generated by protoc-gen-go. DO NOT EDIT.
// source: delayqueue.proto

package delayqueue

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ping
type PingRequest struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{0}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type PingReply struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{1}
}
func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (dst *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(dst, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// Push
type PushRequest struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	DelaySeconds         int64    `protobuf:"varint,2,opt,name=delaySeconds,proto3" json:"delaySeconds,omitempty"`
	NotifyUrl            string   `protobuf:"bytes,3,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{2}
}
func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (dst *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(dst, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *PushRequest) GetDelaySeconds() int64 {
	if m != nil {
		return m.DelaySeconds
	}
	return 0
}

func (m *PushRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

type PushReply struct {
	DataId               string   `protobuf:"bytes,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushReply) Reset()         { *m = PushReply{} }
func (m *PushReply) String() string { return proto.CompactTextString(m) }
func (*PushReply) ProtoMessage()    {}
func (*PushReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{3}
}
func (m *PushReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushReply.Unmarshal(m, b)
}
func (m *PushReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushReply.Marshal(b, m, deterministic)
}
func (dst *PushReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushReply.Merge(dst, src)
}
func (m *PushReply) XXX_Size() int {
	return xxx_messageInfo_PushReply.Size(m)
}
func (m *PushReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PushReply.DiscardUnknown(m)
}

var xxx_messageInfo_PushReply proto.InternalMessageInfo

func (m *PushReply) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

// Pop
type PopRequest struct {
	Timeout              int64    `protobuf:"varint,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PopRequest) Reset()         { *m = PopRequest{} }
func (m *PopRequest) String() string { return proto.CompactTextString(m) }
func (*PopRequest) ProtoMessage()    {}
func (*PopRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{4}
}
func (m *PopRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopRequest.Unmarshal(m, b)
}
func (m *PopRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopRequest.Marshal(b, m, deterministic)
}
func (dst *PopRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopRequest.Merge(dst, src)
}
func (m *PopRequest) XXX_Size() int {
	return xxx_messageInfo_PopRequest.Size(m)
}
func (m *PopRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PopRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PopRequest proto.InternalMessageInfo

func (m *PopRequest) GetTimeout() int64 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

type PopReply struct {
	Data                 string   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PopReply) Reset()         { *m = PopReply{} }
func (m *PopReply) String() string { return proto.CompactTextString(m) }
func (*PopReply) ProtoMessage()    {}
func (*PopReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{5}
}
func (m *PopReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PopReply.Unmarshal(m, b)
}
func (m *PopReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PopReply.Marshal(b, m, deterministic)
}
func (dst *PopReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PopReply.Merge(dst, src)
}
func (m *PopReply) XXX_Size() int {
	return xxx_messageInfo_PopReply.Size(m)
}
func (m *PopReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PopReply.DiscardUnknown(m)
}

var xxx_messageInfo_PopReply proto.InternalMessageInfo

func (m *PopReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// Del
type DelRequest struct {
	DataId               string   `protobuf:"bytes,1,opt,name=dataId,proto3" json:"dataId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRequest) Reset()         { *m = DelRequest{} }
func (m *DelRequest) String() string { return proto.CompactTextString(m) }
func (*DelRequest) ProtoMessage()    {}
func (*DelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{6}
}
func (m *DelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRequest.Unmarshal(m, b)
}
func (m *DelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRequest.Marshal(b, m, deterministic)
}
func (dst *DelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRequest.Merge(dst, src)
}
func (m *DelRequest) XXX_Size() int {
	return xxx_messageInfo_DelRequest.Size(m)
}
func (m *DelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelRequest proto.InternalMessageInfo

func (m *DelRequest) GetDataId() string {
	if m != nil {
		return m.DataId
	}
	return ""
}

type DelReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelReply) Reset()         { *m = DelReply{} }
func (m *DelReply) String() string { return proto.CompactTextString(m) }
func (*DelReply) ProtoMessage()    {}
func (*DelReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_delayqueue_c82fd271669ba90a, []int{7}
}
func (m *DelReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelReply.Unmarshal(m, b)
}
func (m *DelReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelReply.Marshal(b, m, deterministic)
}
func (dst *DelReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelReply.Merge(dst, src)
}
func (m *DelReply) XXX_Size() int {
	return xxx_messageInfo_DelReply.Size(m)
}
func (m *DelReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelReply.DiscardUnknown(m)
}

var xxx_messageInfo_DelReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*PingRequest)(nil), "delayqueue.PingRequest")
	proto.RegisterType((*PingReply)(nil), "delayqueue.PingReply")
	proto.RegisterType((*PushRequest)(nil), "delayqueue.PushRequest")
	proto.RegisterType((*PushReply)(nil), "delayqueue.PushReply")
	proto.RegisterType((*PopRequest)(nil), "delayqueue.PopRequest")
	proto.RegisterType((*PopReply)(nil), "delayqueue.PopReply")
	proto.RegisterType((*DelRequest)(nil), "delayqueue.DelRequest")
	proto.RegisterType((*DelReply)(nil), "delayqueue.DelReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DelayQueueClient is the client API for DelayQueue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DelayQueueClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error)
	Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopReply, error)
	Del(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*DelReply, error)
}

type delayQueueClient struct {
	cc *grpc.ClientConn
}

func NewDelayQueueClient(cc *grpc.ClientConn) DelayQueueClient {
	return &delayQueueClient{cc}
}

func (c *delayQueueClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/delayqueue.DelayQueue/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *delayQueueClient) Push(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushReply, error) {
	out := new(PushReply)
	err := c.cc.Invoke(ctx, "/delayqueue.DelayQueue/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *delayQueueClient) Pop(ctx context.Context, in *PopRequest, opts ...grpc.CallOption) (*PopReply, error) {
	out := new(PopReply)
	err := c.cc.Invoke(ctx, "/delayqueue.DelayQueue/Pop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *delayQueueClient) Del(ctx context.Context, in *DelRequest, opts ...grpc.CallOption) (*DelReply, error) {
	out := new(DelReply)
	err := c.cc.Invoke(ctx, "/delayqueue.DelayQueue/Del", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DelayQueueServer is the server API for DelayQueue service.
type DelayQueueServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	Push(context.Context, *PushRequest) (*PushReply, error)
	Pop(context.Context, *PopRequest) (*PopReply, error)
	Del(context.Context, *DelRequest) (*DelReply, error)
}

func RegisterDelayQueueServer(s *grpc.Server, srv DelayQueueServer) {
	s.RegisterService(&_DelayQueue_serviceDesc, srv)
}

func _DelayQueue_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelayQueueServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delayqueue.DelayQueue/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelayQueueServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DelayQueue_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelayQueueServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delayqueue.DelayQueue/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelayQueueServer).Push(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DelayQueue_Pop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PopRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelayQueueServer).Pop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delayqueue.DelayQueue/Pop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelayQueueServer).Pop(ctx, req.(*PopRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DelayQueue_Del_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DelayQueueServer).Del(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/delayqueue.DelayQueue/Del",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DelayQueueServer).Del(ctx, req.(*DelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DelayQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "delayqueue.DelayQueue",
	HandlerType: (*DelayQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _DelayQueue_Ping_Handler,
		},
		{
			MethodName: "Push",
			Handler:    _DelayQueue_Push_Handler,
		},
		{
			MethodName: "Pop",
			Handler:    _DelayQueue_Pop_Handler,
		},
		{
			MethodName: "Del",
			Handler:    _DelayQueue_Del_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "delayqueue.proto",
}

func init() { proto.RegisterFile("delayqueue.proto", fileDescriptor_delayqueue_c82fd271669ba90a) }

var fileDescriptor_delayqueue_c82fd271669ba90a = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xc1, 0x4f, 0xc2, 0x30,
	0x14, 0xc6, 0x99, 0x23, 0xc8, 0x3e, 0x3c, 0x90, 0x46, 0x71, 0x21, 0x41, 0x49, 0x35, 0x86, 0x13,
	0x07, 0x8d, 0x89, 0x7f, 0x00, 0x17, 0x6f, 0x73, 0xc6, 0xb3, 0x99, 0xae, 0x02, 0x49, 0xa1, 0x85,
	0xb5, 0x87, 0xfe, 0xd3, 0xfe, 0x0d, 0xa6, 0xdd, 0xca, 0x18, 0xe0, 0xad, 0x7d, 0xef, 0xfb, 0xbd,
	0xef, 0xf5, 0x4b, 0xd1, 0xcf, 0x19, 0xcf, 0xcc, 0x46, 0x33, 0xcd, 0xa6, 0x72, 0x2b, 0x94, 0x20,
	0xa8, 0x2b, 0xf4, 0x16, 0xbd, 0x64, 0xb9, 0x9e, 0xa7, 0x6c, 0xa3, 0x59, 0xa1, 0x48, 0x1f, 0xe1,
	0xaa, 0x98, 0xc7, 0xc1, 0x38, 0x98, 0x44, 0xa9, 0x3d, 0xd2, 0x11, 0xa2, 0x52, 0x20, 0xb9, 0x39,
	0xd1, 0xce, 0xd1, 0x4b, 0x74, 0xb1, 0xf0, 0x3c, 0x41, 0x3b, 0xcf, 0x54, 0x56, 0x29, 0xdc, 0x99,
	0x50, 0x5c, 0x38, 0xc3, 0x77, 0xf6, 0x2d, 0xd6, 0x79, 0x11, 0x9f, 0x8d, 0x83, 0x49, 0x98, 0x36,
	0x6a, 0x64, 0x04, 0xac, 0x85, 0x5a, 0xfe, 0x98, 0x4f, 0xbd, 0xe5, 0x71, 0xe8, 0xe8, 0xa8, 0xac,
	0x7c, 0x6c, 0x39, 0xbd, 0x43, 0x54, 0xba, 0xd8, 0x25, 0x06, 0xe8, 0xd8, 0xb9, 0xaf, 0x79, 0xe5,
	0x52, 0xdd, 0xe8, 0x03, 0x90, 0x08, 0xe9, 0x37, 0x89, 0x71, 0xae, 0x96, 0x2b, 0x26, 0xb4, 0x72,
	0xb2, 0x30, 0xf5, 0x57, 0x7a, 0x83, 0xae, 0xd3, 0xd9, 0x59, 0x27, 0xf6, 0xa5, 0xf7, 0xc0, 0x8c,
	0x71, 0x3f, 0xe7, 0x3f, 0x37, 0xa0, 0xeb, 0x54, 0x92, 0x9b, 0xc7, 0xdf, 0xc0, 0x21, 0x99, 0x79,
	0xb3, 0x99, 0x92, 0x17, 0xb4, 0x6d, 0x64, 0xe4, 0x7a, 0xba, 0x17, 0xfd, 0x5e, 0xca, 0xc3, 0xab,
	0xe3, 0x86, 0xe4, 0x86, 0xb6, 0x1c, 0xa9, 0x8b, 0xc5, 0x01, 0x59, 0xe7, 0x7b, 0x40, 0xfa, 0x48,
	0x68, 0x8b, 0x3c, 0x23, 0x4c, 0x84, 0x24, 0x83, 0x46, 0x7f, 0x97, 0xc6, 0xf0, 0xf2, 0xa8, 0xbe,
	0xc3, 0x66, 0x8c, 0x37, 0xb1, 0xfa, 0xf1, 0x4d, 0xcc, 0x3f, 0x97, 0xb6, 0xbe, 0x3a, 0xee, 0x23,
	0x3d, 0xfd, 0x05, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xfe, 0xd4, 0x74, 0x5c, 0x02, 0x00, 0x00,
}
